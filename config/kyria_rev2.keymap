/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/swedish.dtsi"




/ {

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <15>;
            key-positions = <2 3>;
            bindings = <&kp LC(A)>;
        };

        combo_copy {
            timeout-ms = <15>;
            key-positions = <14 15>;
            bindings = <&kp LC(C)>;
        };

        combo_paste {
            timeout-ms = <15>;
            key-positions = <15 16>;
            bindings = <&kp LC(V)>;
        };

        combo_undo {
            timeout-ms = <15>;
            key-positions = <26 27>;
            bindings = <&kp LC(Z)>;
        };

        combo_redo {
            timeout-ms = <15>;
            key-positions = <27 28>;
            bindings = <&kp LC(Y)>;
        };
    };

    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };
    
    behaviors {
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;                        
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 38 39 45 46 47 48 49>;    // <---[[right-hand keys]]
        };
    };
    
    behaviors {
        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;                       
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 31 40 41 42 43 44>;    // <---[[left-hand keys]]
        };
    };
    
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DEL>, <&kp ESC>, <&kp N3>;
        };
    };

   
 

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   Ã…  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            
            bindings = <
   &td0  &sv_ao  &kp P  &kp O  &kp U  &kp Y                                                  &kp Q  &kp G  &kp D  &kp L  &kp M  &kp N0
   &kp CAPS  &lh_pht LALT A  &lh_pht LSHFT H  &lh_pht LCTRL E  &kp I  &kp COMMA                                &kp F  &kp S  &rh_pht RCTRL T  &rh_pht RSHFT N  &rh_pht RALT R  &kp M
   &kp LGUI  &sv_oe  &kp J  &sv_ae  &kp K  &kp DOT  &kp LSHFT  &kp LSHFT  &kp LSHFT  &kp LSHFT  &kp X  &kp B  &kp C  &kp W  &kp V  &kp Z
                                     &to 2  &kp BSPC  &lt 5 SPACE  &lt 3 RET  &kp TAB  &kp TAB  &lt 3 RET  &kp SPACE  &kp BSPC  &lt 1 SPACE
            >;

            

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Layer__1 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                                  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR  &out OUT_USB  &trans  &bl BT_CLR
 &trans  &trans  &trans  &trans  &trans  &trans                                  &bt BT_SEL 1    &bt BT_PRV  &bt BT_NXT  &out OUT_BLE  &trans       &to 0
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2        &trans      &trans  &out OUT_TOG  &trans      &trans
                         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 3        &trans      &trans
            >;
        };

        Layer__2 {
            bindings = <
  &trans  &s_tar  &kp N7  &kp N8  &kp N9  &p_lus                                                     &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &mt LALT DOT  &mt LSHFT N4  &mt LCTRL N5  &kp N6  &m_inus                                      &trans  &trans  &trans  &trans  &trans  &trans
  &kp ESC  &s_st  &kp N1  &kp N2  &kp N3  &kp N0  &to 0   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                 &to 0  &kp BSPC  &lt 5 DEL  &kp ENTER  &kp TAB  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Layer__3 {
            bindings = <
 &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
 &trans  &kp EXCL  &kp AT  &kp POUND  &trans  &m_inus                                  &kp AMPS  &s_st  &kp LPAR  &kp RPAR  &kp EQUAL  &kp QMARK
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Layer__4 {
            bindings = <
   &kp ESC       &kp Q        &kp W     &kp E    &kp R      &kp T                                                  &kp Y     &kp U        &kp I        &kp O          &kp P   &sv_ao
   &kp TAB  &lh_pht LALT A  &lh_pht LSHFT S     &lh_pht LCTRL D    &kp F      &kp G                                                  &kp H     &kp J        &rh_pht RCTRL K  &rh_pht RSHFT L  &sv_oe      &to 4
   &kp LGUI       &kp Z        &kp X     &kp C    &kp V      &kp B  &kp LSHFT  &kp LSHFT  &kp LSHFT  &kp LSHFT      &kp N     &kp M    &kp COMMA      &kp DOT       &kp FSLH  &kp RCTRL
                                     &to 2  &kp DEL  &lt 5 SPACE  &lt 3 RET    &kp TAB    &kp TAB  &lt 3 RET  &kp SPACE  &kp BSPC  &lt 1 SPACE
            >;
        };

        Layer__5 {
            bindings = <
 &trans  &trans  &trans  &kp LC(LS(TAB))  &kp LC(TAB)  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &kp LA(LS(TAB))   &kp LA(LSHFT)   &kp LGUI  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &to 4
            >;
        };
    };
};
